name: backend-ci

on:
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"

jobs:
  pre-commit:
    name: pre-commit (ruff/black/isort/mypy)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('backend/.pre-commit-config.yml') }}

      - name: Install pre-commit
        run: python -m pip install --upgrade pip pre-commit

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: -C backend -c backend/.pre-commit-config.yml

  tests:
    name: pytest
    runs-on: ubuntu-latest
    needs: pre-commit

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: vitally
          POSTGRES_USER: vitally
          POSTGRES_PASSWORD: vitally
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U vitally -d vitally"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # Django/DRF
      DJANGO_SETTINGS_MODULE: vitally.settings
      DJANGO_DEBUG: "false"
      DJANGO_SECRET_KEY: test_key
      JWT_SIGNING_KEY: test_jwt_key

      # Apontar para services do job (localhost)
      DATABASE_URL: postgresql://vitally:vitally@localhost:5432/vitally
      REDIS_URL: redis://localhost:6379/0

      # Evitar chamadas reais em testes
      SENDGRID_API_KEY: dummy
      SENDGRID_FROM_EMAIL: no-reply@vitally.test
      WA_ACCESS_TOKEN: dummy
      WA_PHONE_NUMBER_ID: "0"

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov

      - name: Django checks & migrate
        run: |
          python manage.py check
          python manage.py migrate --noinput

      - name: Run tests
        run: pytest -q --cov=./ --cov-report=xml
